{
  "data" : {
    "model" : {
      "outputType" : "LOCAL_DATE",
      "localDateStart" : "2024-01-22",
      "localTimeStart" : "16:41:39",
      "localDateTimeStart" : "2024-01-22T17:41:39.521969145",
      "zonedDateTimeStart" : {
        "dateTime" : "2024-01-22T17:41:39.521973361",
        "timeZone" : "Europe/Berlin"
      },
      "useExecutionTimeStart" : false,
      "fixedSteps" : "INTERVAL_AND_END",
      "numberOfRows" : 1000,
      "interval" : "P0Y0M0W1D",
      "localDateEnd" : "2025-01-22",
      "localTimeEnd" : "17:41:39",
      "localDateTimeEnd" : "2025-01-22T17:41:39.521988364",
      "zonedDateTimeEnd" : {
        "dateTime" : "2025-01-22T17:41:39.521989931",
        "timeZone" : "Europe/Berlin"
      },
      "useExecutionTimeEnd" : true,
      "outputColumnName" : "Date"
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "fixedSteps" : {
            "oneOf" : [ {
              "const" : "NUMBER_AND_END",
              "title" : "Count to end"
            }, {
              "const" : "NUMBER_AND_INTERVAL",
              "title" : "Count with interval"
            }, {
              "const" : "INTERVAL_AND_END",
              "title" : "Interval to end"
            } ],
            "title" : "Fixed steps",
            "description" : "How the rows are created.\n<ul>\n<li><b>Count to end</b>: Outputs evenly spaced date&amp;time rows, with the specified number of output values, starting at the the start date&amp;time and ending exactly at the specified end date&amp;time. The number of rows produced in this case is fixed to the number of steps specified.\n</li>\n<li><b>Count with interval</b>: Outputs evenly spaced date&amp;time rows, with the specified interval between them, starting at the start date&amp;time and ending once the specified number of rows have been added. The number of rows produced in this case is fixed to the number of steps specified.\n</li>\n<li><b>Interval to end</b>: Outputs evenly spaced date&amp;time rows, with the specified interval between them, starting at the start date&amp;time and ending at or before the end date&amp;time, depending on whether the interval divides exactly into the range. The number of rows produced in this case is variable and depends on the interval and the range.\n</li>\n</ul>",
            "default" : "NUMBER_AND_END"
          },
          "interval" : {
            "type" : "object",
            "title" : "Interval between rows",
            "description" : "The interval between the created rows.\n",
            "default" : "P0Y0M0W1D"
          },
          "localDateEnd" : {
            "type" : "string",
            "format" : "date",
            "title" : "End date",
            "description" : "The date at which the date&amp;time creation should stop. The end date is inclusive, except if the output mode is 'Number and Duration' and the provided interval does not divide evenly between the start and end date.\n",
            "default" : "2020-01-01"
          },
          "localDateStart" : {
            "type" : "string",
            "format" : "date",
            "title" : "Start date",
            "description" : "The date at which the date&amp;time creation should start, inclusive.\n",
            "default" : "2019-01-01"
          },
          "localDateTimeEnd" : {
            "type" : "string",
            "format" : "date-time",
            "title" : "End local date&time",
            "description" : "The local date&amp;time at which the date&amp;time creation should stop. The end date&amp;time is inclusive, except if the output mode is 'Number and Duration' and the provided interval does not divide evenly between the start and end date&amp;time.\n",
            "default" : "2020-01-01T14:00:00.123456789"
          },
          "localDateTimeStart" : {
            "type" : "string",
            "format" : "date-time",
            "title" : "Start local date&time",
            "description" : "The local date&amp;time at which the date&amp;time creation should start, inclusive.\n",
            "default" : "2019-01-01T14:00:00"
          },
          "localTimeEnd" : {
            "type" : "string",
            "format" : "time",
            "title" : "End time",
            "description" : "The time at which the date&amp;time creation should stop. The end time is inclusive, except if the output mode is 'Number and Duration' and the provided interval does not divide evenly between the start and end time.\n",
            "default" : "14:00:00"
          },
          "localTimeStart" : {
            "type" : "string",
            "format" : "time",
            "title" : "Start time",
            "description" : "The time at which the date&amp;time creation should start, inclusive.\n",
            "default" : "13:00:00"
          },
          "numberOfRows" : {
            "type" : "integer",
            "format" : "int64",
            "title" : "Number of rows",
            "description" : "The number of rows to create.\n",
            "default" : 1000
          },
          "outputColumnName" : {
            "type" : "string",
            "title" : "Output column name",
            "description" : "The name of the output column.",
            "default" : "Date"
          },
          "outputType" : {
            "oneOf" : [ {
              "const" : "LOCAL_DATE",
              "title" : "Date"
            }, {
              "const" : "LOCAL_TIME",
              "title" : "Time"
            }, {
              "const" : "LOCAL_DATE_TIME",
              "title" : "Date & time"
            }, {
              "const" : "ZONED_DATE_TIME",
              "title" : "Date & time & zone"
            } ],
            "title" : "Output type",
            "description" : "The type to create can be selected. It can be either a Date, Time, Date&amp;time (Local), or Date&amp;time (Zoned).\n\n<ul>\n<li><b>Date</b>: Outputs values of type Date</li>\n<li><b>Time</b>: Outputs values of type Time</li>\n<li><b>Date &amp; time</b>: Outputs values of type Date&amp;time (Local)</li>\n<li><b>Date &amp; time &amp; zone</b>: Outputs values of type Date&amp;time (Zoned)</li>\n</ul>",
            "default" : "LOCAL_DATE"
          },
          "useExecutionTimeEnd" : {
            "type" : "boolean",
            "title" : "Use execution date & time",
            "description" : "If checked, the execution date &amp; time will be used as ending point.",
            "default" : false
          },
          "useExecutionTimeStart" : {
            "type" : "boolean",
            "title" : "Use execution date & time",
            "description" : "If checked, the execution date &amp; time will be used as starting point.",
            "default" : false
          },
          "zonedDateTimeEnd" : {
            "type" : "string",
            "format" : "date-time",
            "title" : "End zoned date&time",
            "description" : "The zoned date&amp;time at which the date&amp;time creation should stop. The end date&amp;time is inclusive, except if the output mode is 'Number and Duration' and the provided interval does not divide evenly between the start and end date&amp;time.\n",
            "default" : {
              "dateTime" : "2020-01-01T14:00:00.123456789",
              "timeZone" : "Europe/Berlin"
            }
          },
          "zonedDateTimeStart" : {
            "type" : "string",
            "format" : "date-time",
            "title" : "Start zoned date&time",
            "description" : "The zoned date&amp;time at which the date&amp;time creation should start, inclusive.\n",
            "default" : {
              "dateTime" : "2019-01-01T14:00:00",
              "timeZone" : "Europe/Berlin"
            }
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "type" : "Control",
      "scope" : "#/properties/model/properties/outputType",
      "options" : {
        "format" : "valueSwitch"
      }
    }, {
      "label" : "Starting Point",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/localDateStart",
        "options" : {
          "format" : "localDate"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/outputType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "LOCAL_DATE"
                } ]
              }
            }, {
              "scope" : "#/properties/model/properties/useExecutionTimeStart",
              "schema" : {
                "const" : false
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/localTimeStart",
        "options" : {
          "showMilliseconds" : true,
          "format" : "localTime"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/outputType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "LOCAL_TIME"
                } ]
              }
            }, {
              "scope" : "#/properties/model/properties/useExecutionTimeStart",
              "schema" : {
                "const" : false
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/localDateTimeStart",
        "options" : {
          "showMilliseconds" : true,
          "format" : "dateTime"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/outputType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "LOCAL_DATE_TIME"
                } ]
              }
            }, {
              "scope" : "#/properties/model/properties/useExecutionTimeStart",
              "schema" : {
                "const" : false
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/zonedDateTimeStart",
        "options" : {
        "possibleValues" : [ {
            "id" : "America/New_York",
            "text" : "America/New_York"
          }, {
            "id" : "Asia/Karachi",
            "text" : "Asia/Karachi"
          }, {
            "id" : "Europe/Berlin",
            "text" : "Europe/Berlin"
          }, {
            "id" : "UTC",
            "text" : "UTC"
          } ],
          "showMilliseconds" : true,
          "format" : "zonedDateTime"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/outputType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "ZONED_DATE_TIME"
                } ]
              }
            }, {
              "scope" : "#/properties/model/properties/useExecutionTimeStart",
              "schema" : {
                "const" : false
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/useExecutionTimeStart",
        "options" : {
          "format" : "checkbox"
        }
      } ]
    }, {
      "label" : "Range",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/fixedSteps",
        "options" : {
          "format" : "valueSwitch"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/numberOfRows",
        "options" : {
          "validation" : {
            "max" : {
              "errorMessage" : "Value too large to process without risking precision loss (> 9007199254740991).",
              "parameters" : {
                "max" : 9.007199254740991E15,
                "isExclusive" : false
              }
            },
            "min" : {
              "errorMessage" : "The value must be at least 1.",
              "parameters" : {
                "min" : 1.0,
                "isExclusive" : false
              }
            }
          }
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/fixedSteps",
            "schema" : {
              "oneOf" : [ {
                "const" : "NUMBER_AND_END"
              }, {
                "const" : "NUMBER_AND_INTERVAL"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/interval",
        "options" : {
          "format" : "interval",
          "intervalType" : "DATE_OR_TIME"
        },
        "providedOptions" : [ "intervalType" ],
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/fixedSteps",
            "schema" : {
              "oneOf" : [ {
                "const" : "INTERVAL_AND_END"
              }, {
                "const" : "NUMBER_AND_INTERVAL"
              } ]
            }
          }
        }
      } ]
    }, {
      "label" : "Ending Point",
      "type" : "Section",
      "rule" : {
        "effect" : "SHOW",
        "condition" : {
          "scope" : "#/properties/model/properties/fixedSteps",
          "schema" : {
            "oneOf" : [ {
              "const" : "NUMBER_AND_END"
            }, {
              "const" : "INTERVAL_AND_END"
            } ]
          }
        }
      },
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/localDateEnd",
        "options" : {
          "format" : "localDate"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/outputType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "LOCAL_DATE"
                } ]
              }
            }, {
              "scope" : "#/properties/model/properties/useExecutionTimeEnd",
              "schema" : {
                "const" : false
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/localTimeEnd",
        "options" : {
          "showMilliseconds" : true,
          "format" : "localTime"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/outputType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "LOCAL_TIME"
                } ]
              }
            }, {
              "scope" : "#/properties/model/properties/useExecutionTimeEnd",
              "schema" : {
                "const" : false
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/localDateTimeEnd",
        "options" : {
          "showMilliseconds" : true,
          "format" : "dateTime"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/outputType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "LOCAL_DATE_TIME"
                } ]
              }
            }, {
              "scope" : "#/properties/model/properties/useExecutionTimeEnd",
              "schema" : {
                "const" : false
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/zonedDateTimeEnd",
        "options" : {
          "possibleValues" : [ {
                "id" : "America/New_York",
                "text" : "America/New_York"
            }, {
                "id" : "Asia/Karachi",
                "text" : "Asia/Karachi"
            }, {
                "id" : "Europe/Berlin",
                "text" : "Europe/Berlin"
            }, {
                "id" : "UTC",
                "text" : "UTC"
          } ],
          "showMilliseconds" : true,
          "format" : "zonedDateTime"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/outputType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "ZONED_DATE_TIME"
                } ]
              }
            }, {
              "scope" : "#/properties/model/properties/useExecutionTimeEnd",
              "schema" : {
                "const" : false
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/useExecutionTimeEnd",
        "options" : {
          "format" : "checkbox"
        }
      } ]
    }, {
      "label" : "Output",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/outputColumnName",
        "options" : {
          "validation" : {
            "pattern" : {
              "errorMessage" : "The string must start and end with a non-whitespace character.",
              "parameters" : {
                "pattern" : "\\S(.*\\S)?"
              }
            }
          }
        }
      } ]
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "outputType" : { },
          "localDateStart" : { },
          "localTimeStart" : { },
          "localDateTimeStart" : { },
          "zonedDateTimeStart" : { },
          "useExecutionTimeStart" : { },
          "fixedSteps" : { },
          "numberOfRows" : { },
          "interval" : { },
          "localDateEnd" : { },
          "localTimeEnd" : { },
          "localDateTimeEnd" : { },
          "zonedDateTimeEnd" : { },
          "useExecutionTimeEnd" : { },
          "outputColumnName" : { }
        }
      }
    }
  },
  "initialUpdates" : [ {
    "scope" : "#/properties/model/properties/interval",
    "providedOptionName" : "intervalType",
    "values" : [ {
      "indices" : [ ],
      "value" : "DATE"
    } ]
  } ],
  "globalUpdates" : [ {
    "trigger" : {
      "scope" : "#/properties/model/properties/outputType"
    },
    "dependencies" : [ "#/properties/model/properties/outputType" ]
  } ]
}