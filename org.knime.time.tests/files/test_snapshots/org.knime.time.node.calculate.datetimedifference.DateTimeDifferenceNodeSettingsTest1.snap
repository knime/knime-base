{
  "data" : {
    "model" : {
      "firstColumnSelection" : "Zoned Date Time",
      "firstColumnIsDate" : false,
      "firstColumnIsTime" : false,
      "firstColumnIsDateTime" : false,
      "firstColumnIsZonedDateTime" : false,
      "secondDateTimeValueType" : "FIXED_DATE_TIME",
      "secondColumnSelection" : "Local Date",
      "localDateFixed" : "2025-01-22",
      "localTimeFixed" : "11:11:03.696287373",
      "localDateTimeFixed" : "2025-01-22T11:11:03.696293188",
      "zonedDateTimeFixed" : {
        "dateTime" : "2025-01-22T11:11:03.696297872",
        "timeZone" : "Pacific/Pago_Pago"
      },
      "mode" : "SECOND_MINUS_FIRST",
      "outputType" : "DURATION_OR_PERIOD",
      "granularity" : "SECOND",
      "outputNumberType" : "DECIMALS",
      "outputColumnName" : "Date&Time Difference"
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "firstColumnIsDate" : {
            "type" : "boolean",
            "default" : false
          },
          "firstColumnIsDateTime" : {
            "type" : "boolean",
            "default" : false
          },
          "firstColumnIsTime" : {
            "type" : "boolean",
            "default" : false
          },
          "firstColumnIsZonedDateTime" : {
            "type" : "boolean",
            "default" : false
          },
          "firstColumnSelection" : {
            "type" : "string",
            "title" : "First date&time column",
            "description" : "The first date&amp;time column. The first and second column will be subtracted from each other, with the direction depending on the 'mode' option.\n",
            "default" : "localTimeTest"
          },
          "granularity" : {
            "oneOf" : [ {
              "const" : "YEAR",
              "title" : "Year"
            }, {
              "const" : "MONTH",
              "title" : "Month"
            }, {
              "const" : "WEEK",
              "title" : "Week"
            }, {
              "const" : "DAY",
              "title" : "Day"
            }, {
              "const" : "HOUR",
              "title" : "Hour"
            }, {
              "const" : "MINUTE",
              "title" : "Minute"
            }, {
              "const" : "SECOND",
              "title" : "Second"
            }, {
              "const" : "MILLISECOND",
              "title" : "Millisecond"
            }, {
              "const" : "MICROSECOND",
              "title" : "Microsecond"
            }, {
              "const" : "NANOSECOND",
              "title" : "Nanosecond"
            } ],
            "title" : "Granularity",
            "description" : "The unit of the output column when converting to a number.",
            "default" : "SECOND"
          },
          "localDateFixed" : {
            "type" : "string",
            "format" : "date",
            "title" : "Date",
            "description" : "The fixed date to calculate the difference to.",
            "default" : "2020-01-01"
          },
          "localDateTimeFixed" : {
            "type" : "string",
            "format" : "date-time",
            "title" : "Local date&time",
            "description" : "The fixed local date&amp;time to calculate the difference to.",
            "default" : "2020-01-01T14:00:00.123456789"
          },
          "localTimeFixed" : {
            "type" : "string",
            "format" : "time",
            "title" : "Time",
            "description" : "The fixed time to calculate the difference to.",
            "default" : "14:00:00.123456789"
          },
          "mode" : {
            "oneOf" : [ {
              "const" : "SECOND_MINUS_FIRST",
              "title" : "Second minus first"
            }, {
              "const" : "FIRST_MINUS_SECOND",
              "title" : "First minus second"
            } ],
            "title" : "Mode",
            "description" : "The mode in which the date&amp;time values are subtracted from each other: either subtract the second value from the first, or subtract the first from the second.\n",
            "default" : "SECOND_MINUS_FIRST"
          },
          "outputColumnName" : {
            "type" : "string",
            "title" : "Output column name",
            "description" : "The name of the output column.",
            "default" : "Date&Time Difference"
          },
          "outputNumberType" : {
            "oneOf" : [ {
              "const" : "NO_DECIMALS",
              "title" : "No decimals"
            }, {
              "const" : "DECIMALS",
              "title" : "Decimals"
            } ],
            "title" : "Output number type",
            "description" : "The type of the numeric output column.\n<ul>\n<li><b>No decimals</b>: The output column will be an integer. Applicable for all granularities.\n</li>\n<li><b>Decimals</b>: The output column will be a floating-point number. Not applicable for date-based granularities.\n</li>\n</ul>",
            "default" : "NO_DECIMALS"
          },
          "outputType" : {
            "oneOf" : [ {
              "const" : "DURATION_OR_PERIOD",
              "title" : "Duration"
            }, {
              "const" : "NUMBER",
              "title" : "Number"
            } ],
            "title" : "Output type",
            "description" : "The type of the output column.",
            "default" : "DURATION_OR_PERIOD"
          },
          "secondColumnSelection" : {
            "type" : "string",
            "title" : "Second date&time column",
            "description" : "The second date&amp;time column to calculate the difference to.\n",
            "default" : "localTimeTest"
          },
          "secondDateTimeValueType" : {
            "oneOf" : [ {
              "const" : "COLUMN",
              "title" : "Column"
            }, {
              "const" : "FIXED_DATE_TIME",
              "title" : "Fixed date&time"
            }, {
              "const" : "EXECUTION_DATE_TIME",
              "title" : "Execution date&time"
            }, {
              "const" : "PREVIOUS_ROW",
              "title" : "Previous row"
            } ],
            "title" : "Second date&time value",
            "description" : "The source of the second date&amp;time value.\n<ul>\n<li><b>Column</b>: Calculates the difference between the selected second column and the first column. Differences can only be calculated between columns of the same type. Using the <i>Modify Time</i>, <i>Modify Date</i>, and <i>Modify Time Zone</i> nodes you can adjust the date&amp;time formats beforehand.\n</li>\n<li><b>Fixed date&amp;time</b>: Calculates the difference between the selected fixed date&amp;time and the first column.\n</li>\n<li><b>Execution date&amp;time</b>: Calculates the difference between the execution date&amp;time and the chosen first column.\n</li>\n<li><b>Previous row</b>: Calculates the difference between the date&amp;time in row <i>n</i> and row <i>n-1</i> in the chosen row. Note that the first row in the output will be MISSING as there is no previous row to calculate the difference with.\n</li>\n</ul>",
            "default" : "COLUMN"
          },
          "zonedDateTimeFixed" : {
            "type" : "string",
            "format" : "date-time",
            "title" : "Zoned date&time",
            "description" : "The fixed zoned date&amp;time to calculate the difference to.",
            "default" : {
              "dateTime" : "2020-01-01T14:00:00.123456789",
              "timeZone" : "Europe/Berlin"
            }
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "label" : "Differencing",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/firstColumnSelection",
        "options" : {
          "format" : "dropDown"
        },
        "providedOptions" : [ "possibleValues" ]
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/secondDateTimeValueType",
        "options" : {
          "format" : "radio",
          "radioLayout" : "vertical"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/secondColumnSelection",
        "options" : {
          "format" : "dropDown"
        },
        "providedOptions" : [ "possibleValues" ],
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/secondDateTimeValueType",
            "schema" : {
              "oneOf" : [ {
                "const" : "COLUMN"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/localDateFixed",
        "options" : {
          "format" : "localDate"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/firstColumnIsDate",
              "schema" : {
                "const" : true
              }
            }, {
              "scope" : "#/properties/model/properties/secondDateTimeValueType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "FIXED_DATE_TIME"
                } ]
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/localTimeFixed",
        "options" : {
          "showMilliseconds" : true,
          "format" : "localTime"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/firstColumnIsTime",
              "schema" : {
                "const" : true
              }
            }, {
              "scope" : "#/properties/model/properties/secondDateTimeValueType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "FIXED_DATE_TIME"
                } ]
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/localDateTimeFixed",
        "options" : {
          "showMilliseconds" : true,
          "format" : "dateTime"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/firstColumnIsDateTime",
              "schema" : {
                "const" : true
              }
            }, {
              "scope" : "#/properties/model/properties/secondDateTimeValueType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "FIXED_DATE_TIME"
                } ]
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/zonedDateTimeFixed",
        "options" : {
          "possibleValues" : [ {
            "id" : "America/New_York",
            "text" : "America/New_York"
          }, {
            "id" : "Asia/Karachi",
            "text" : "Asia/Karachi"
          }, {
            "id" : "Europe/Berlin",
            "text" : "Europe/Berlin"
          }, {
            "id" : "UTC",
            "text" : "UTC"
          } ],
          "showMilliseconds" : true,
          "format" : "zonedDateTime"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/firstColumnIsZonedDateTime",
              "schema" : {
                "const" : true
              }
            }, {
              "scope" : "#/properties/model/properties/secondDateTimeValueType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "FIXED_DATE_TIME"
                } ]
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/mode",
        "options" : {
          "format" : "valueSwitch"
        }
      } ]
    }, {
      "label" : "Output",
      "type" : "Section",
      "elements" : [ {
        "type" : "Control",
        "scope" : "#/properties/model/properties/outputType",
        "options" : {
          "format" : "valueSwitch"
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/granularity",
        "options" : {
          "format" : "dropDown"
        },
        "providedOptions" : [ "possibleValues" ],
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "scope" : "#/properties/model/properties/outputType",
            "schema" : {
              "oneOf" : [ {
                "const" : "NUMBER"
              } ]
            }
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/outputNumberType",
        "options" : {
          "format" : "valueSwitch"
        },
        "rule" : {
          "effect" : "SHOW",
          "condition" : {
            "type" : "AND",
            "conditions" : [ {
              "scope" : "#/properties/model/properties/outputType",
              "schema" : {
                "oneOf" : [ {
                  "const" : "NUMBER"
                } ]
              }
            }, {
              "scope" : "#/properties/model/properties/granularity",
              "schema" : {
                "oneOf" : [ {
                  "const" : "HOUR"
                }, {
                  "const" : "MINUTE"
                }, {
                  "const" : "SECOND"
                }, {
                  "const" : "MILLISECOND"
                }, {
                  "const" : "MICROSECOND"
                }, {
                  "const" : "NANOSECOND"
                } ]
              }
            } ]
          }
        }
      }, {
        "type" : "Control",
        "scope" : "#/properties/model/properties/outputColumnName",
        "options" : {
          "validation" : {
            "pattern" : {
              "errorMessage" : "The string must start and end with a non-whitespace character.",
              "parameters" : {
                "pattern" : "\\S(.*\\S)?"
              }
            }
          }
        }
      } ]
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "firstColumnSelection" : { },
          "firstColumnIsDate" : {
            "configPaths" : [ ]
          },
          "firstColumnIsTime" : {
            "configPaths" : [ ]
          },
          "firstColumnIsDateTime" : {
            "configPaths" : [ ]
          },
          "firstColumnIsZonedDateTime" : {
            "configPaths" : [ ]
          },
          "secondDateTimeValueType" : { },
          "secondColumnSelection" : { },
          "localDateFixed" : { },
          "localTimeFixed" : { },
          "localDateTimeFixed" : { },
          "zonedDateTimeFixed" : { },
          "mode" : { },
          "outputType" : { },
          "granularity" : { },
          "outputNumberType" : { },
          "outputColumnName" : { }
        }
      }
    }
  },
  "initialUpdates" : [ {
    "scope" : "#/properties/model/properties/firstColumnIsDate",
    "values" : [ {
      "indices" : [ ],
      "value" : false
    } ]
  }, {
    "scope" : "#/properties/model/properties/firstColumnIsDateTime",
    "values" : [ {
      "indices" : [ ],
      "value" : false
    } ]
  }, {
    "scope" : "#/properties/model/properties/firstColumnIsTime",
    "values" : [ {
      "indices" : [ ],
      "value" : false
    } ]
  }, {
    "scope" : "#/properties/model/properties/firstColumnIsZonedDateTime",
    "values" : [ {
      "indices" : [ ],
      "value" : false
    } ]
  }, {
    "scope" : "#/properties/model/properties/firstColumnSelection",
    "providedOptionName" : "possibleValues",
    "values" : [ {
      "indices" : [ ],
      "value" : [ {
        "id" : "localTimeTest",
        "text" : "localTimeTest",
        "type" : {
          "id" : "org.knime.core.data.time.localtime.LocalTimeValue",
          "text" : "Time"
        }
      }, {
        "id" : "localDateTest",
        "text" : "localDateTest",
        "type" : {
          "id" : "org.knime.core.data.time.localdate.LocalDateValue",
          "text" : "Date"
        }
      }, {
        "id" : "localDateTimeTest",
        "text" : "localDateTimeTest",
        "type" : {
          "id" : "org.knime.core.data.time.localdatetime.LocalDateTimeValue",
          "text" : "Date&time (Local)"
        }
      }, {
        "id" : "zonedDateTimeTest",
        "text" : "zonedDateTimeTest",
        "type" : {
          "id" : "org.knime.core.data.time.zoneddatetime.ZonedDateTimeValue",
          "text" : "Date&time (Zoned)"
        }
      } ]
    } ]
  }, {
    "scope" : "#/properties/model/properties/granularity",
    "values" : [ {
      "indices" : [ ],
      "value" : "SECOND"
    } ]
  }, {
    "scope" : "#/properties/model/properties/granularity",
    "providedOptionName" : "possibleValues",
    "values" : [ {
      "indices" : [ ],
      "value" : [ {
        "id" : "YEAR",
        "text" : "Years"
      }, {
        "id" : "MONTH",
        "text" : "Months"
      }, {
        "id" : "WEEK",
        "text" : "Weeks"
      }, {
        "id" : "DAY",
        "text" : "Days"
      }, {
        "id" : "HOUR",
        "text" : "Hours"
      }, {
        "id" : "MINUTE",
        "text" : "Minutes"
      }, {
        "id" : "SECOND",
        "text" : "Seconds"
      }, {
        "id" : "MILLISECOND",
        "text" : "Millis"
      }, {
        "id" : "MICROSECOND",
        "text" : "Micros"
      }, {
        "id" : "NANOSECOND",
        "text" : "Nanos"
      } ]
    } ]
  }, {
    "scope" : "#/properties/model/properties/secondColumnSelection",
    "providedOptionName" : "possibleValues",
    "values" : [ {
      "indices" : [ ],
      "value" : [ ]
    } ]
  } ],
  "globalUpdates" : [ {
    "trigger" : {
      "scope" : "#/properties/model/properties/firstColumnSelection"
    },
    "dependencies" : [ "#/properties/model/properties/firstColumnSelection", "#/properties/model/properties/granularity" ]
  } ]
}