{
  "data" : {
    "model" : {
      "columns" : {
        "mode" : "MANUAL",
        "patternFilter" : {
          "pattern" : "",
          "isCaseSensitive" : true,
          "isInverted" : false
        },
        "manualFilter" : {
          "manuallySelected" : [ "Cluster Membership" ],
          "manuallyDeselected" : [ ],
          "includeUnknownColumns" : true
        },
        "typeFilter" : {
          "selectedTypes" : [ ],
          "typeDisplays" : [ ]
        }
      },
      "columnSuffix" : " (to number)",
      "startIndex" : 0,
      "increment" : 1,
      "maxCategories" : 100,
      "defaultValue" : null,
      "mapMissingTo" : null
    }
  },
  "schema" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "columnSuffix" : {
            "type" : [ "string", "null" ],
            "title" : "Append suffix to column name",
            "description" : "If checked, append the given suffix to the names of the computed columns. Otherwise the computed columns replace the columns in the include list.",
            "default" : " (to number)"
          },
          "columns" : {
            "type" : "object",
            "properties" : {
              "manualFilter" : {
                "type" : "object",
                "properties" : {
                  "includeUnknownColumns" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "manuallyDeselected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  },
                  "manuallySelected" : {
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "manuallySelected" : [ ],
                  "manuallyDeselected" : [ ],
                  "includeUnknownColumns" : false
                }
              },
              "mode" : {
                "oneOf" : [ {
                  "const" : "MANUAL",
                  "title" : "Manual"
                }, {
                  "const" : "REGEX",
                  "title" : "Regex"
                }, {
                  "const" : "WILDCARD",
                  "title" : "Wildcard"
                }, {
                  "const" : "TYPE",
                  "title" : "Type"
                } ],
                "default" : "MANUAL"
              },
              "patternFilter" : {
                "type" : "object",
                "properties" : {
                  "isCaseSensitive" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "isInverted" : {
                    "type" : "boolean",
                    "default" : false
                  },
                  "pattern" : {
                    "type" : "string",
                    "default" : ""
                  }
                },
                "default" : {
                  "pattern" : "",
                  "isCaseSensitive" : false,
                  "isInverted" : false
                }
              },
              "selected" : {
                "type" : "array",
                "items" : {
                  "type" : "string"
                }
              },
              "typeFilter" : {
                "type" : "object",
                "properties" : {
                  "selectedTypes" : {
                    "default" : [ ],
                    "type" : "array",
                    "items" : {
                      "type" : "string"
                    }
                  }
                },
                "default" : {
                  "selectedTypes" : [ ],
                  "typeDisplays" : [ ]
                }
              }
            },
            "title" : "Columns to transform",
            "description" : "Select the columns to be converted from nominal (category) values to numbers. Only columns with nominal data are available. Use the include/exclude lists to specify which columns should be processed. ",
            "default" : {
              "mode" : "MANUAL",
              "patternFilter" : {
                "pattern" : "",
                "isCaseSensitive" : false,
                "isInverted" : false
              },
              "manualFilter" : {
                "manuallySelected" : [ "String column" ],
                "manuallyDeselected" : [ ],
                "includeUnknownColumns" : true
              },
              "typeFilter" : {
                "selectedTypes" : [ ],
                "typeDisplays" : [ ]
              }
            }
          },
          "defaultValue" : {
            "type" : [ "integer", "null" ],
            "format" : "int32",
            "title" : "Use default value in PMML",
            "description" : "This value is used when the PMML model is applied. It defines the value used when the input is not found in the mapping. If disabled, a missing cell is assigned in this case. ",
            "default" : null
          },
          "increment" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Increment",
            "description" : "The i-th category is mapped to the value i * Increment + Start value.",
            "default" : 1
          },
          "mapMissingTo" : {
            "type" : [ "integer", "null" ],
            "format" : "int32",
            "title" : "Map missing cells to number",
            "description" : "Missing cells are mapped to this value. If disabled, missing cells will be mapped to missing cells. ",
            "default" : null
          },
          "maxCategories" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Maximum number of categories",
            "description" : "Processing is interrupted for inputs with more categories.",
            "default" : 100
          },
          "startIndex" : {
            "type" : "integer",
            "format" : "int32",
            "title" : "Start value",
            "description" : "The category in the first row will be mapped to this value. ",
            "default" : 0
          }
        }
      }
    }
  },
  "ui_schema" : {
    "elements" : [ {
      "type" : "Control",
      "scope" : "#/properties/model/properties/columns",
      "options" : {
        "format" : "typedStringFilter",
        "unknownValuesText" : "Any unknown column",
        "emptyStateLabel" : "No columns in this list.",
        "hideTypeFilter" : true
      },
      "providedOptions" : [ "possibleValues" ]
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/columnSuffix",
      "options" : {
        "hideOnNull" : true
      },
      "providedOptions" : [ "default" ]
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/startIndex",
      "options" : {
        "validation" : {
          "max" : {
            "errorMessage" : "The value must not exceed 2147483647.",
            "parameters" : {
              "isExclusive" : false,
              "max" : 2.147483647E9
            }
          },
          "min" : {
            "errorMessage" : "The value must be at least -2147483648.",
            "parameters" : {
              "isExclusive" : false,
              "min" : -2.147483648E9
            }
          }
        }
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/increment",
      "options" : {
        "validation" : {
          "max" : {
            "errorMessage" : "The value must not exceed 2147483647.",
            "parameters" : {
              "isExclusive" : false,
              "max" : 2.147483647E9
            }
          },
          "min" : {
            "errorMessage" : "The value must be at least 1.",
            "parameters" : {
              "isExclusive" : false,
              "min" : 1.0
            }
          }
        }
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/maxCategories",
      "options" : {
        "validation" : {
          "max" : {
            "errorMessage" : "The value must not exceed 2147483647.",
            "parameters" : {
              "isExclusive" : false,
              "max" : 2.147483647E9
            }
          },
          "min" : {
            "errorMessage" : "The value must be at least 1.",
            "parameters" : {
              "isExclusive" : false,
              "min" : 1.0
            }
          }
        }
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/defaultValue",
      "options" : {
        "validation" : {
          "max" : {
            "errorMessage" : "The value must not exceed 2147483647.",
            "parameters" : {
              "isExclusive" : false,
              "max" : 2.147483647E9
            }
          },
          "min" : {
            "errorMessage" : "The value must be at least -2147483648.",
            "parameters" : {
              "isExclusive" : false,
              "min" : -2.147483648E9
            }
          }
        },
        "hideOnNull" : true,
        "default" : 0
      }
    }, {
      "type" : "Control",
      "scope" : "#/properties/model/properties/mapMissingTo",
      "options" : {
        "validation" : {
          "max" : {
            "errorMessage" : "The value must not exceed 2147483647.",
            "parameters" : {
              "isExclusive" : false,
              "max" : 2.147483647E9
            }
          },
          "min" : {
            "errorMessage" : "The value must be at least -2147483648.",
            "parameters" : {
              "isExclusive" : false,
              "min" : -2.147483648E9
            }
          }
        },
        "hideOnNull" : true,
        "default" : 0
      }
    } ]
  },
  "persist" : {
    "type" : "object",
    "properties" : {
      "model" : {
        "type" : "object",
        "properties" : {
          "columns" : {
            "configPaths" : [ [ "column-filter", "filter-type" ], [ "column-filter", "included_names" ], [ "column-filter", "excluded_names" ], [ "column-filter", "enforce_option" ], [ "column-filter", "name_pattern", "pattern" ], [ "column-filter", "name_pattern", "type" ], [ "column-filter", "name_pattern", "caseSensitive" ], [ "column-filter", "name_pattern", "excludeMatching" ] ]
          },
          "columnSuffix" : {
            "configPaths" : [ [ "append_columns" ], [ "column_suffix" ] ]
          },
          "startIndex" : {
            "configKey" : "start_index"
          },
          "increment" : {
            "configKey" : "increment"
          },
          "maxCategories" : {
            "configKey" : "max_categories"
          },
          "defaultValue" : {
            "configPaths" : [ ],
            "deprecatedConfigKeys" : [ {
              "deprecated" : [ [ "default_value" ] ]
            } ]
          },
          "mapMissingTo" : {
            "configPaths" : [ ],
            "deprecatedConfigKeys" : [ {
              "deprecated" : [ [ "map_missing_to" ] ]
            } ]
          }
        }
      }
    }
  },
  "initialUpdates" : [ {
    "scope" : "#/properties/model/properties/columnSuffix",
    "providedOptionName" : "default",
    "values" : [ {
      "indices" : [ ],
      "value" : " (to number)"
    } ]
  }, {
    "scope" : "#/properties/model/properties/columns",
    "providedOptionName" : "possibleValues",
    "values" : [ {
      "indices" : [ ],
      "value" : [ {
        "id" : "String column",
        "text" : "String column",
        "type" : {
          "id" : "org.knime.core.data.StringValue",
          "text" : "String"
        }
      } ]
    } ]
  } ]
}   } ]
  } ]
}}
      } ]
    } ]
  } ]
}