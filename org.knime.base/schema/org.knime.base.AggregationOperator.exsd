<?xml version='1.0' encoding='UTF-8'?>
<!-- Schema file written by PDE -->
<schema targetNamespace="org.knime.base" xmlns="http://www.w3.org/2001/XMLSchema">
<annotation>
      <appInfo>
         <meta.schema plugin="org.knime.base" id="AggregationOperator" name="AggregationOperator"/>
      </appInfo>
      <documentation>
         Extension points for custom aggregation operators as used in the GroupBy node.
      </documentation>
   </annotation>

   <element name="extension">
      <annotation>
         <appInfo>
            <meta.element />
         </appInfo>
      </annotation>
      <complexType>
         <sequence minOccurs="1" maxOccurs="unbounded">
            <element ref="AggregationOperator"/>
         </sequence>
         <attribute name="point" type="string" use="required">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="id" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
            </annotation>
         </attribute>
         <attribute name="name" type="string">
            <annotation>
               <documentation>
                  
               </documentation>
               <appInfo>
                  <meta.attribute translatable="true"/>
               </appInfo>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <element name="AggregationOperator">
      <complexType>
         <attribute name="AggregationOperator" type="string" use="required">
            <annotation>
               <documentation>
                  Specify an extension of the org.knime.base.data.aggregation.AggregationOperator class
               </documentation>
               <appInfo>
                  <meta.attribute kind="java" basedOn="org.knime.base.data.aggregation.AggregationOperator:"/>
               </appInfo>
            </annotation>
         </attribute>
         <attribute name="deprecated" type="boolean" use="default" value="false">
            <annotation>
               <documentation>
                  Set &lt;i&gt;true&lt;/i&gt; if the aggregation method is deprecated. If an aggregation method is indicated as deprecated it is no longer available to the user in the node dialogs. However nodes that used the deprecated operator can still be loaded and executed since the method is still available via AggregationMethods#getMethod4Id(). The default value is &lt;b&gt;false&lt;/b&gt; to indicate that the operator is not deprecated and thus available to the user for selection.
               </documentation>
            </annotation>
         </attribute>
      </complexType>
   </element>

   <annotation>
      <appInfo>
         <meta.section type="since"/>
      </appInfo>
      <documentation>
         KNIME v2.2
      </documentation>
   </annotation>


   <annotation>
      <appInfo>
         <meta.section type="apiinfo"/>
      </appInfo>
      <documentation>
         Derived classes must extend the AggregationOperator class.
&lt;b&gt;It must also provide an Constructor with no arguments which is used for the registration!&lt;/b&gt;
The AggregationOperator class uses three data containers that contain the information used during aggregation.

The first container is the {@link OperatorData} class which all operator specific information such as the name of the operator and if the operator supports missing values.

The second container is the {@link GlobalSettings} class which holds global informations such as the column delimiter or the maximum number of unique values per group. Implementations can use the {@link GlobalSettings#DEFAULT} object in the constructor which is a dummy object which gets replaced when the operator is created using the {@link #createInstance(GlobalSettings, OperatorColumnSettings)} method.

The last container is the {@link OperatorColumnSettings} which contains column specific information for the operator such as the {@link DataColumnSpec} of the column and if
 missing values should be considered when aggregating the column. The class also provides two default instances {@link OperatorColumnSettings#DEFAULT_INCL_MISSING} and {@link OperatorColumnSettings#DEFAULT_EXCL_MISSING} which can be used in the constructor. These get replaced by the actual settings from the node dialog in the {@link #createInstance(GlobalSettings, OperatorColumnSettings)} method.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="implementation"/>
      </appInfo>
      <documentation>
         The default implementations which are shipped with KNIME are available in the org.knime.base.data.aggregation package. Most of this methods are also extendable and can be used in other implementations. An example is the AndElementCountOperator that extends the AndElementOperator.
      </documentation>
   </annotation>

   <annotation>
      <appInfo>
         <meta.section type="copyright"/>
      </appInfo>
      <documentation>
         Copyright by KNIME AG, Zurich, Switzerland
Website: http://www.knime.com; Email: contact@knime.com
      </documentation>
   </annotation>

</schema>
